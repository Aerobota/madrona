sudo apt-get install gdal-bin libgdal-dev python-dev build-essential libjpeg-dev \
                     libjpeg8-dev libpng3 libfreetype6-dev python-mapnik \
                     mapnik-input-plugin-* mapnik-utils libmapnik2.2 libmapnik2-dev \
                     postgresql-9.3-postgis-2.1


export CPLUS_INCLUDE_PATH=/usr/include/gdal
export C_INCLUDE_PATH=/usr/include/gdal
pip install --allow-external --allow-insecure \
    --find-links http://wheels2.astropy.org/ --use-wheel \
    "Cython>=0.16" Numpy "matplotlib>=1.2.1" "GDAL>=1.10.0" \
    PIL --allow-external PIL --allow-unverified PIL \
    --allow-all-external --allow-unverified elementtree elementtree


# IF inside venv, requires virtualenv wrapper
pip install virtualenvwrapper virtualenv
add2virtualenv /usr/lib/pymodules/python2.7

pip install -r requirements.txt
pip install -r requirements-dev.txt
python setup.py develop

sudo -u postgres psql -d template1 -c "CREATE EXTENSION postgis;"
sudo -u postgres psql -d template1 -f madrona/common/sql/cleangeometry.sql
sudo -u postgres createuser -sdP django
sudo -u postgres createdb -O django test_project



Support for 
- django 1.7 and py 3
- postgis
- improved registration
- security issues (csrf, outdated dependencies)
- remove cruft
	- kmlapp
	- layers
	- help
	- google-analytics
	- kml bookmarks
	- async
	- xy_query
	- openid
	- browser checking
	- simplefaq, news, etc
- build in support for:
	- flatblocks
	- socialauth
	- new raster_stats
	- geopandas
	- extended user model
	- caching / redis
	- bookmarks / map state
	- geojson or tile viewing
	- group management
	- py.test
	- spatialitedb or non-postgres
- break into separate modules or use thrid party
    - unit_converter
    - heatmap
- travis
- more robust test suite
- modern dir structure
- use django media management and modern asset mgmt
- optional mapnik dependency
- dramatically simplify installation
- js front end components to use workspace
- new workspace data model
- improved API 
- improved docs / tutorials
- improved front page (developer focused)



Madrona
Web Framework for Spatial Content Managment 

- REST API
- User and Admin interfaces
- Import/Export of common data formats
- Decision support - primitives for building advanced analysis and reporting
- Collaboration
- Data visualization

